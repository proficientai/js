openapi: 3.0.1
info:
  title: api
  version: ''
paths:
  /agents:
    get:
      description: >-
        Returns a list of your agents. The agents are returned sorted by
        creation date, with the most recently created agents appearing first.
      operationId: agents_list
      tags:
        - Agents
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentsList'
      summary: List all agents
  /agents/{agent_id}:
    get:
      description: Retrieves the agent with the given ID.
      operationId: agents_get
      tags:
        - Agents
      parameters:
        - name: agent_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/AgentId'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agent'
      summary: Retrieve an agent
  /interactions:
    get:
      description: >-
        Returns a list of interactions associated with the user. The
        interactions are returned sorted by creation date, with the most
        recently created interactions appearing first.
      operationId: interactions_list
      tags:
        - Interactions
      parameters:
        - name: agent_id
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/AgentId'
        - name: limit
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/PaginationLimit'
        - name: starting_after
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/PaginationLimit'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InteractionsList'
      summary: List all interactions
    post:
      description: Creates a new `Interaction` with an agent.
      operationId: interactions_create
      tags:
        - Interactions
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InteractionCreateResponse'
      summary: Create an interaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InteractionCreateParams'
  /interactions/{interaction_id}:
    get:
      description: Retrieves the interaction with the given ID.
      operationId: interactions_get
      tags:
        - Interactions
      parameters:
        - name: interaction_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/InteractionId'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interaction'
      summary: Retrieve an interaction
    post:
      description: >-
        Updates the properties of the specified interaction. Only the provided
        properties will be updated. Any properties not provided will be left
        unchanged.
      operationId: interactions_update
      tags:
        - Interactions
      parameters:
        - name: interaction_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/InteractionId'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interaction'
      summary: Update an interaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InteractionUpdateParams'
components:
  schemas:
    AgentsList:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Agent'
      required:
        - data
    PaginationLimit:
      type: integer
      description: >-
        Used to specify the maximum number of objects that can be returned. Must
        be an integer ranging from 1 to 100. Defaults to 20.
    PaginationStartingAfter:
      type: string
      description: >-
        A pagination cursor parameter that takes an object ID as a value. This
        indicates the position of the list where you want to start fetching the
        data. For example, if your first request returns 100 objects ending with
        `obj_100`, you can use `starting_after=obj_100` in your subsequent API
        call to retrieve the next page of the list.
    AgentObjectType:
      type: string
      enum:
        - agent
      description: The type of the Agent object
    InteractionObjectType:
      type: string
      enum:
        - interaction
      description: The type of the Interaction object
    AgentId:
      type: string
      description: The unique identifier of the agent
    InteractionId:
      type: string
      description: The unique identifier of the interaction
    InteractionCreateParams:
      type: object
      description: The data with which an `Interaction` is created.
      properties:
        agent_id:
          $ref: '#/components/schemas/AgentId'
      required:
        - agent_id
    InteractionCreateResponse:
      type: object
      description: >-
        An object that contains the initial interaction data including the
        `Interaction` object itself and the initial messages associated with it.
      properties:
        interaction:
          $ref: '#/components/schemas/Interaction'
      required:
        - interaction
    InteractionUpdateParams:
      type: object
      description: The data with which an `Interaction` is updated.
      properties:
        name:
          type: string
    Agent:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/AgentId'
        object:
          $ref: '#/components/schemas/AgentObjectType'
        active:
          type: boolean
          description: >-
            Whether the agent is currently active. If not, all interactions with
            this agent will be blocked.
          example: true
        name:
          type: string
          description: The name of the agent
          example: Eliza
        description:
          type: string
          description: The description of the agent
          example: A general-purpose assistant
        created_at:
          type: integer
          description: >-
            The time at which the object was created, measured in milliseconds
            since the Unix epoch
          example: 1671631795145
        updated_at:
          type: integer
          description: >-
            The time at which the object was last updated, measured in
            milliseconds since the Unix epoch
          example: 1671631795145
      required:
        - id
        - object
        - active
        - name
        - description
        - created_at
        - updated_at
    Interaction:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/InteractionId'
        object:
          $ref: '#/components/schemas/InteractionObjectType'
        agent_id:
          $ref: '#/components/schemas/AgentId'
        archived:
          type: boolean
          description: Whether the interaction has been archived by the user
        created_at:
          type: integer
          description: >-
            The time at which the object was created, measured in milliseconds
            since the Unix epoch
        name:
          type: string
          description: The name of the interaction
        total_message_count:
          type: integer
          description: The total number of messages in the interaction
        updated_at:
          type: integer
          description: >-
            The time at which the object was last updated, measured in
            milliseconds since the Unix epoch
        user_id:
          type: string
          description: The unique identifier of the user
      required:
        - id
        - object
        - agent_id
        - archived
        - created_at
        - name
        - total_message_count
        - updated_at
        - user_id
    InteractionsList:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Interaction'
      required:
        - data
  securitySchemes: {}
servers:
  - url: https://api.proficientai.com
    description: Production (The production environment)
  - url: https://staging.proficientai.com
    description: Staging (The staging environment)
  - url: http://localhost:8080/client
    description: Development (The local environment)
