openapi: 3.0.1
info:
  title: api
  version: ''
paths:
  /agents:
    get:
      description: >-
        Returns a list of agents that belong to the current organization. The
        agents are returned sorted by creation date, with the most recently
        created agents appearing first.
      operationId: agents_list
      tags:
        - Agents
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentsList'
      summary: List all agents
    post:
      description: Creates a new agent with the given properties.
      operationId: agents_create
      tags:
        - Agents
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agent'
      summary: Create an agent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentCreateParams'
  /agents/{agent_id}:
    get:
      description: Retrieves the agent with the given ID.
      operationId: agents_get
      tags:
        - Agents
      parameters:
        - name: agent_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/AgentId'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agent'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: Retrieve an agent
components:
  schemas:
    AgentsList:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Agent'
      required:
        - data
    ErrorCode:
      type: string
      enum:
        - invalid_request
        - invalid_credentials
        - forbidden
        - resource_not_found
        - conflict
        - unavailable
        - unknown
    Error:
      type: object
      description: >-
        Represents the general interface of an API error. The body of every
        error returned by the API contains `code` and `message` fields.
      properties:
        code:
          $ref: '#/components/schemas/ErrorCode'
        message:
          type: string
      required:
        - code
        - message
    CreatedAt:
      type: integer
      description: >-
        The time at which the object was created, measured in milliseconds since
        the Unix epoch
    UpdatedAt:
      type: integer
      description: >-
        The time at which the object was last updated, measured in milliseconds
        since the Unix epoch
    AgentId:
      type: string
      description: The unique identifier of the `Agent`
    AgentObjectType:
      type: string
      enum:
        - agent
      description: The type of the `Agent` object
    AgentCreateParams:
      type: object
      description: The data with which an `Agent` is created.
      properties:
        name:
          type: string
      required:
        - name
    Agent:
      type: object
      description: >-
        <p>An _agent_ is an AI entity that exists to serve your organization.
        Agents are intelligent, configurable and context-aware and can interact
        with your users via a messaging system enabled by the Proficient
        API.</p>
      properties:
        id:
          $ref: '#/components/schemas/AgentId'
        object:
          $ref: '#/components/schemas/AgentObjectType'
        active:
          type: boolean
          description: >-
            Whether the `Agent` is currently active. If not, users will not be
            able to communicate with the `Agent`.
          example: true
        name:
          type: string
          description: The name of the `Agent`
          example: Eliza
        description:
          type: string
          description: The description of the `Agent`
          example: A general-purpose assistant
        created_at:
          $ref: '#/components/schemas/CreatedAt'
        updated_at:
          $ref: '#/components/schemas/UpdatedAt'
      required:
        - id
        - object
        - active
        - name
        - description
        - created_at
        - updated_at
  securitySchemes: {}
servers:
  - url: https://api.proficientai.com
    description: Production (The production environment)
  - url: https://staging.proficientai.com
    description: Staging (The staging environment)
  - url: http://localhost:8080/client
    description: Development (The local environment)
