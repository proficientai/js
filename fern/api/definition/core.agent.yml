# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

imports:
  core: core.yml
  agent_config: core.agent_config.yml

types:
  # Properties

  AgentId:
    type: string
    docs: The unique identifier of the agent
    examples:
      - name: Example0
        value: ag_Lad8YCGGiDLiqIZPWRXmc2ix

  AgentObjectType:
    enum:
      - agent
    docs: The type of the `Agent` object
    examples:
      - name: Example0
        value: agent

  AgentActiveStatus:
    type: boolean
    docs: Whether the agent is currently active. If not, users will not be able to interact with the agent.
    examples:
      - name: Example0
        value: true

  AgentDescription:
    type: string
    docs: The description of the agent, intended for developers' reference.
    examples:
      - name: Example0
        value: Job application assistant

  AgentDisplayDescription:
    type: string
    docs: The agent's public-facing description, meant to be visible to your users.
    examples:
      - name: Example0
        value: An AI assistant that helps job seekers with their job applications.

  AgentDisplayName:
    type: string
    docs: The agent's display name, intended to serve as the public-facing name visible to your users.
    examples:
      - name: Example0
        value: Taya

  AgentName:
    type: string
    docs: The name of the agent, designed to be visible to developers for internal reference purposes.
    examples:
      - name: Example0
        value: Taya

  # Request/Response Interfaces

  AgentCreateParams:
    audiences:
      - admin
    properties:
      description: optional<AgentDescription>
      display_description: optional<AgentDisplayDescription>
      display_name: optional<AgentDisplayName>
      greeting_message: optional<agent_config.GreetingMessage>
      initial_turn: optional<agent_config.InitialTurn>
      name: optional<AgentName>
      openai: optional<agent_config.OpenAIConfig>
      provider: agent_config.Provider
      system_message: optional<agent_config.SystemMessage>
    docs: The data with which an agent is created.

  AgentUpdateParams:
    audiences:
      - admin
    properties:
      description: optional<AgentDescription>
      display_description: optional<AgentDisplayDescription>
      display_name: optional<AgentDisplayName>
      name: optional<AgentName>
    docs: The data with which an agent is updated.

  # Resource

  Agent:
    properties:
      id: AgentId
      object: AgentObjectType
      active: AgentActiveStatus
      description: AgentDescription
      display_description: AgentDisplayDescription
      display_name: AgentDisplayName
      name: AgentName
      created_at: core.CreatedAt
      updated_at: core.UpdatedAt
    examples:
      - name: Example0
        value:
          id: $AgentId.Example0
          object: $AgentObjectType.Example0
          active: $AgentActiveStatus.Example0
          description: $AgentDescription.Example0
          display_description: $AgentDisplayDescription.Example0
          display_name: $AgentDisplayName.Example0
          name: $AgentName.Example0
          created_at: $core.CreatedAt.Example0
          updated_at: $core.UpdatedAt.Example0
    docs: <p>An _agent_ is an AI entity that exists to serve your project's users. Agents are intelligent, configurable and context-aware and can interact with your users via a messaging system enabled by the Proficient API.</p>
