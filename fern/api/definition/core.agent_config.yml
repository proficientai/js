# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

imports:
  core: core.yml
  agent: core.agent.yml
  interaction: core.interaction.yml

types:
  # Properties

  AgentConfigObjectType:
    audiences:
      - admin
    enum:
      - agent_config
    docs: The type of the `AgentConfig` object
    examples:
      - name: Example0
        value: agent_config

  GreetingMessage:
    audiences:
      - admin
    type: string
    docs: <p>The message sent by the agent to initiate an interaction. This property supports <a href="https://handlebarsjs.com/guide/#what-is-handlebars">Handlebars</a> template format where you have access to the <code>user</code> and <code>agent</code> parameters. You can use these parameters to add context and personalize the message.</p>
    examples:
      - name: Example0
        value: Hello {{user.first_name}}. How may I help you today?

  InitialTurn:
    audiences:
      - admin
    type: interaction.InteractionParticipant
    docs: Indicates who sends the first message in each interaction. Defaults to `"user"`.
    examples:
      - name: Example0
        value: user

  Model:
    audiences:
      - admin
    enum:
      - name: openai_gpt_4
        value: openai.gpt-4
      - name: openai_gpt_3_5_turbo
        value: openai.gpt-3.5-turbo
    docs: The underlying model that powers the agent.
    examples:
      - name: Example0
        value: openai.gpt-4

  OpenAIConfig:
    audiences:
      - admin
    properties:
      frequency_penalty: optional<OpenAIConfigFrequencyPenalty>
      presence_penalty: optional<OpenAIConfigPresencePenalty>
      temperature: optional<OpenAIConfigTemperature>
      top_p: optional<OpenAIConfigTopP>
    docs: Indicates who sends the first message in each interaction. Defaults to `"user"`.
    examples:
      - name: Example0
        value:
          frequency_penalty: $OpenAIConfigFrequencyPenalty.Example0
          presence_penalty: $OpenAIConfigPresencePenalty.Example0
          temperature: $OpenAIConfigTemperature.Example0

  OpenAIConfigFrequencyPenalty:
    audiences:
      - admin
    type: double
    docs: <p>Can take values between -2.0 and 2.0, with positive values penalizing the model for generating new tokens that have already appeared frequently in the generated text so far. This reduces the likelihood of the model repeating the same line or phrase verbatim. In essence, a higher positive value for <code>frequency_penalty</code> encourages the model to use less frequently used tokens in the generated text. See original <a href="https://platform.openai.com/docs/api-reference/completions/create#completions/create-frequency_penalty">definition</a>.</p>
    examples:
      - name: Example0
        value: 1.2

  OpenAIConfigPresencePenalty:
    audiences:
      - admin
    type: double
    docs: <p>Can take values between -2.0 and 2.0, with positive values penalizing the model for generating new tokens that have already appeared in the generated text. This encourages the model to generate text about new topics and increases the likelihood of generating more diverse content. In essence, a higher positive value for <code>presence_penalty</code> will lead to more avoidance of repeating previously used tokens in the generated text. See original <a href="https://platform.openai.com/docs/api-reference/completions/create#completions/create-presence_penalty">definition</a>.</p>
    examples:
      - name: Example0
        value: 0.7

  OpenAIConfigTemperature:
    audiences:
      - admin
    type: double
    docs: <p>Determines the level of randomness in the generated output. Can take values between 0 and 2.0, with higher values like 0.8 resulting in more randomness, and lower values like 0.2 making the output more predictable. See original <a href="https://platform.openai.com/docs/api-reference/completions/create#completions/create-temperature">definition</a>.</p>
    examples:
      - name: Example0
        value: 0.9

  OpenAIConfigTopP:
    audiences:
      - admin
    type: double
    docs: <p>An alternative to the <code>temperature</code> option. Uses a method called nucleus sampling, which involves considering only the tokens with the highest probability mass. It specifies the proportion of the probability mass to consider, with a value of 0.1 indicating that only the tokens comprising the top 10% probability mass will be taken into account. In essence, <code>top_p</code> determines the size of the set of tokens to choose from, based on their probabilities. See original <a href="https://platform.openai.com/docs/api-reference/completions/create#completions/create-top_p">definition</a>.</p>
    examples:
      - name: Example0
        value: 0.1

  SystemMessage:
    audiences:
      - admin
    type: string
    docs: <p>The system prompt that will be injected at the beginning of each interaction. This property supports <a href="https://handlebarsjs.com/guide/#what-is-handlebars">Handlebars</a> template format where you have access to the <code>user</code> and <code>agent</code> parameters. You can use these parameters to provide rich context to the agent and steer it in a specific direction.</p>
    examples:
      - name: Example0
        value: Your name is {{agent.display_name}}. You are an AI assistant developed by Acme Inc. and your job is to help their user {{user.first_name}} with a wide range of tasks.

  # Request/Response Interfaces

  AgentConfigUpdateParams:
    audiences:
      - admin
    properties:
      greeting_message: optional<GreetingMessage>
      initial_turn: optional<InitialTurn>
      model: optional<Model>
      openai: optional<OpenAIConfig>
      system_message: optional<SystemMessage>
    docs: The data with which an `AgentConfig` is updated.

  # Resource

  AgentConfig:
    audiences:
      - admin
    properties:
      object: AgentConfigObjectType
      agent_id: agent.AgentId
      greeting_message: GreetingMessage
      initial_turn: InitialTurn
      model: Model
      openai: OpenAIConfig
      system_message: SystemMessage
    examples:
      - name: Example0
        value:
          object: $AgentConfigObjectType.Example0
          agent_id: $agent.AgentId.Example0
          greeting_message: $GreetingMessage.Example0
          initial_turn: $InitialTurn.Example0
          model: $Model.Example0
          openai: $OpenAIConfig.Example0
          system_message: $SystemMessage.Example0
    docs: Represents the current configuration of the agent. This is an admin-level resource that is not exposed to the users.
