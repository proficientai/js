/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from "../../../../environments";
import { ProficientAiApi } from "../../../..";
export declare namespace Interactions {
    interface Options {
        environment: environments.ProficientAiApiEnvironment | string;
        xProficientApiKey: string;
        xProficientUserExternalId: string;
        xProficientUserHmac?: string;
    }
}
export declare class Interactions {
    private readonly options;
    constructor(options: Interactions.Options);
    /**
     * Returns a list of interactions associated with the user. The interactions are returned sorted by creation date, with the most recently created interactions appearing first.
     */
    list(request?: ProficientAiApi.ListInteractionsRequest): Promise<ProficientAiApi.InteractionsList>;
    /**
     * Retrieves the interaction with the given ID.
     */
    get(interactionId: ProficientAiApi.InteractionId): Promise<ProficientAiApi.Interaction>;
    /**
     * Creates a new `Interaction` with an agent.
     */
    create(request: ProficientAiApi.InteractionCreateParams): Promise<ProficientAiApi.InteractionCreateResponse>;
    /**
     * Updates the properties of the specified interaction. Only the provided properties will be updated. Any properties not provided will be left unchanged.
     */
    update(interactionId: ProficientAiApi.InteractionId, request: ProficientAiApi.InteractionUpdateParams): Promise<ProficientAiApi.Interaction>;
}
